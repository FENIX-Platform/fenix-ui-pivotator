{"version":3,"sources":["webpack:///fenix-ui-pivotator.min.js","webpack:///webpack/bootstrap 763a630fa6a7dba9704f","webpack:///./src/js/index.js","webpack:///./src/js/functions.js","webpack:///external \"jstat\""],"names":["define","__WEBPACK_EXTERNAL_MODULE_3__","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","myFunction","extractData","data","options","extractor","extracted","length","i","concat","buildPivotResult","opt","row","rows","cols","columns","getValue","myfunc","getGetValue","valueOutputType","cumulative","a","dat","listTotalColumns","listTotalRows","len","result","values","indexR","indexC","r","push","join","j","sort","pivotData","userOptions","undefined","Utils","copyProperties","defaultOptions","toPivotData","FX","tmp","metadata","dsd","d","derived","toFX","pivotdata","ii","temp","split","jj","vtemp","vindex","myAgg","aggregationFn","getAgg","getFormater","formatter","decimals","traduc","title","ROWS","EN","COLS","replace","subject","toFXJson","MYFINALRESULT","unit","flag","attribute","cols2","cols2label","okline","nookline","rowname","colsname","temp2","hasOwnProperty","showRowHeaders","JSON","parse","stringify","hidden2","hidden","source","dest","k","isArray","testObject","propertyIsEnumerable","stringComparator","b","localeCompare","numberComparator","defaultComparator","makeComparator","fields","comparators","entry","entryType","this","v","field","identity","x","toTree","arr","mySpan","listToTree","list","childKey","parentKey","childrenKey","nodeFn","node","name","children","nodeCache","reduce","tree","parentNode","walkTree","visitorFn","parent","forEach","child","pruneChildren","setColRowSpan","treeToTab","prof","profCurrent","ret","span","indexMap","index","slice","indexOld","parentId","ret2","pivot","apply","Aggregator","VALUE0","default","cell","format","nbDec","jStat","sum","avg","mean","median","stdev","count","Value","VALUE","value","um","diff","v1","GetValue","rec","champ","number","parseFloat","string","Formater","localstring","e","nbdecimal","Math","floor","pow","toLocaleString","getListAggregator","choix"],"mappings":"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","file":"fenix-ui-pivotator.min.js","sourcesContent":["define([\"jstat\"], function(__WEBPACK_EXTERNAL_MODULE_3__) { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\n\t\tvar define = require('amdefine')(module);\n\t}\n\t\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (myFunction) {\n\t\t'use strict';\n\t\t//FIG\n\t\tvar MYFINALRESULT;\n\t\tvar myfunc = new myFunction();\n\t\n\t\t\tvar Utils = {\n\tcopyProperties: function (source, dest) {\n\t\t\t\tfor (var k in source) {\n\t\t\t\t\tif (source.hasOwnProperty(k)) {dest[k] = source[k];}\n\t\t\t\t}\n\t\t\t},\n\tisArray: function (testObject) {return testObject && !(testObject.propertyIsEnumerable('length'))&& typeof testObject === 'object' && typeof testObject.length === 'number';},\n\tstringComparator: function (a, b) {\treturn a.localeCompare(b);\t},\n\tnumberComparator: function (a, b) {\t\tif (a > b) {return 1;} else if (b > a) {return -1;} else {\treturn 0;\t}\t},\n\tdefaultComparator: function () {\t\t\treturn 0;\t\t},\n\tmakeComparator: function (fields, data, comparators) {\n\t\t\t\tvar len = fields.length;\n\t\t\t\tvar i;\n\t\t\t\tvar c = [];\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tvar entry = data[0][fields[i]];\n\t\t\t\t\tvar entryType = typeof entry;\n\t\t\t\t\tif (typeof comparators[fields[i]] === 'function') {\n\t\t\t\t\t\tc[i] = comparators[fields[i]];\n\t\t\t\t\t} else if (entryType === 'number') {\n\t\t\t\t\t\tc[i] = this.numberComparator;\n\t\t\t\t\t} else if (entryType === 'string') {\n\t\t\t\t\t\tc[i] = this.stringComparator;\n\t\t\t\t\t} else if (Utils.isArray(entry)) {\n\t\t\t\t\t\tc[i] = this.defaultComparator;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc[i] = this.defaultComparator;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn function (a, b) {\n\t\t\t\t\tvar v = 0;\n\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\tvar field = fields[i];\n\t\t\t\t\t\tv = c[i](a[field], b[field]);\n\t\t\t\t\t\tif (v !== 0) {return v;}\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tvar identity =function(){return x}\n\t\t\n\t\t\n\t\t\n\t\tvar toTree=function(arr,mySpan)\t{\n\t\t\tvar data=[{id:'root'}];\n\t\t\tvar indexMap={}\n\t\t\tfor(var i in arr){\n\t\t\t\tfor(var j=1;j<= arr[i].length;j++){\n\t\t\t\t\tvar index=arr[i].slice(0,j).join(\"_\");\n\t\t\t\t\tif(!indexMap[index]){indexMap[index]=false;}\n\t\t\t\t\tvar indexOld=\"\"\n\t\t\t\t\tif(j>1){indexOld=arr[i].slice(0,j-1).join(\"_\");}\n\t\t\t\t\tif(indexMap[index]==false){\n\t\t\t\t\t\tif(indexOld.length>0){data.push({\"id\":index,\"parentId\":indexOld})}\n\t\t\t\t\t\telse{data.push({\"id\":index,\"parentId\":'root'})}\n\t\t\t\t\t}\n\t\t\t\t\tindexMap[index]=true;\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t\t//\t\tconsole.log(data);\n\t\n\t\t\tvar options = {  childKey  : 'id',  parentKey : 'parentId'};\n\t\n\t\n\t\t\t//document.body.innerHTML += '<pre>' + JSON.stringify(tree, null, 4) + '</pre>';\n\t\n\t\t\tfunction listToTree(list, options) {\n\t\t\t\toptions = options || {};\n\t\t\t\tvar childKey    = options.childKey    || 'child';\n\t\t\t\tvar parentKey   = options.parentKey   || 'parent';\n\t\t\t\tvar childrenKey = options.childrenKey || 'children';\n\t\t\t\tvar nodeFn      = options.nodeFn      || function(node, name, children) {   return { name : name, children : children };  };\n\t\t\t\tvar nodeCache = {};\n\t\t\t\treturn list.reduce(function(tree, node) {\n\t\t\t\t\tnode[childrenKey] = [];\n\t\t\t\t\tnodeCache[node[childKey]] = node;\n\t\t\t\t\tif (typeof node[parentKey] === 'undefined' || node[parentKey] === '') {\n\t\t\t\t\t\ttree = nodeFn(node, node[childKey], node[childrenKey]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar  parentNode = nodeCache[node[parentKey]];\n\t\t\t\t\t\tparentNode[childrenKey].push(nodeFn(node, node[childKey], node[childrenKey]));\n\t\t\t\t\t}\n\t\t\t\t\treturn tree;\n\t\t\t\t}, {});\n\t\t\t}\n\t\n\t\t\tfunction walkTree(tree, visitorFn, parent) {\n\t\t\t\tif (visitorFn == null || typeof visitorFn !== 'function') {return tree;\t}\n\t\t\t\tvisitorFn.call(tree, tree, parent);\n\t\t\t\tif (tree.children && tree.children.length > 0) {\n\t\t\t\t\ttree.children.forEach(function(child) {walkTree(child, visitorFn, tree);});\n\t\t\t\t}\n\t\t\t\treturn tree;\n\t\t\t}\n\t\n\t\t\tfunction pruneChildren(node, parent) {\tif (node.children.length < 1) {delete node.children;}}\n\t\t\t\n\t\t\t\n\t\t\tfunction setColRowSpan(tree){\n\t\t\t\tif(!tree.children || tree.children.length==0){\t\ttree[\"span\"]=1}\n\t\t\t\telse{tree[\"span\"]=0;}\n\t\t\t\tfor(var i in tree.children)\n\t\t\t\t{tree[\"span\"]+=setColRowSpan(tree.children[i])}\n\t\t\t\treturn tree[\"span\"];\n\t\t\t}\n\t\t\t\n\t\t\tvar tree = walkTree(listToTree(data, options), pruneChildren);\n\t\t\tsetColRowSpan(tree,mySpan)\n\t\n\t\t\tfunction treeToTab(tree,prof,profCurrent){\n\t\t\tvar\tret=[];\n\t\t\t\tif(prof==profCurrent){\n\t\t\t\t\tfor(var i in tree.children){\n\t\t\t\t\t\t//console.log(\"INSIDE\",tree.children[i])\t\n\t\t\t\t\t\tret.push({id:tree.children[i].name,span:tree.children[i].span})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{for(var i in tree.children){ret=ret.concat(treeToTab(tree.children[i],prof,profCurrent+1))}}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\n\t\n\t\n\t\n\t\t\tvar ret2=[];\n\t\t\tfor(var i in arr[0]){//console.log(\"HIHI\",i);\n\t\t\t\tvar temp=[]\n\t\t\t\t//console.log(ret[i],treeToTab(tree,i,0))\n\t\t\t\ttemp=treeToTab(tree,i,0);\n\t\t\t\tret2.push(temp);\n\t\t\t}\n\t\t\t//console.log('final ret',ret2);\n\t\t\treturn ret2;//tree;\n\t\t}\n\t\tvar defaultOptions = {extractor: null,comparators: {}};\n\t\n\t\tfunction extractData(data, options) {\n\t\t\tvar extractor = options.extractor;\n\t\t\tif (typeof extractor === 'function') {\n\t\t\t\tvar extracted = [];\n\t\t\t\tvar length = data.length;\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\t//console.log(\"verif\",data[i])\n\t\t\t\t\textracted = extracted.concat(extractor(data[i]));\n\t\t\t\t\t//extracted.push(extractor(data[i]));\n\t\t\t\t}\n\t\t\t\treturn extracted;\n\t\t\t} else {return data;}\n\t\t}\n\t\n\t\n\t\t//function buildPivotResult(data, row, cols, getValue, cumulative) {\n\tfunction buildPivotResult(data, opt) {\n\t\n\t\tvar row=opt.rows, cols=opt.columns, getValue= myfunc.getGetValue(opt.valueOutputType), cumulative=opt.cumulative\n\t\t\n\t\t\t//console.log(\"buildPivotResult\",\"data\",data, \"opt\",opt);\n\t\t\tif (!getValue) {getValue = function (a) {return a}}//mapping\n\t\n\t\t\tvar listTotalColumns = {};\n\t\t\tvar listTotalRows = {};\n\t\t\tvar columns=[];\n\t\t\tvar rows=[];\n\t\t\tvar len = data.length;\n\t\t\tvar dat;\n\t\t\t//var result = {};\n\t\t\tvar result = {};\n\t\t\t//console.log(\"opt\",opt)\n\t\t\tfor(var i=0;i<opt.values.length;i++){result[opt.values[i]]={};}\n\t\t\t\n\t\t\t\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\t\n\t\t\t\tvar indexR = [];\n\t\t\t\tvar indexC = [];\n\t\t\t\tdat = data[i];\n\t\t\t\tfor (var r in row) {indexR.push(data[i][row[r]]);}\n\t\t\t\tfor (var c in cols) {indexC.push(data[i][cols[c]]);}\n\t\t\t\tindexR = indexR.join(\"|*\");\n\t\t\t\tindexC = indexC.join(\"|*\");\n\t\t\t\t\n\t\t\t\tfor(var j=0;j<opt.values.length;j++){\n\t\t\t\t\tif (!result[opt.values[j]][indexR]) {result[opt.values[j]][indexR] = {};}\n\t\t\t\t\t\n\t\t\t\t\tif (!result[opt.values[j]][indexR][indexC])\n\t\t\t\t\t{result[opt.values[j]][indexR][indexC] =[myfunc.getGetValue(opt.values[j],\"number\")(dat,opt.values[j])];}\n\t\t\t\t\telse {result[opt.values[j]][indexR][indexC].push(myfunc.getGetValue(opt.values[j],\"number\")(dat,opt.values[j]));}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\n\t\t\t\tlistTotalColumns[indexC] = true;\n\t\t\t\tlistTotalRows[indexR] = true;\n\t\t\t}\n\t\n\t\t\tfor(var i in listTotalColumns){columns.push(i)}\n\t\t\tfor(var i in listTotalRows){rows.push(i)}\n\t\t\trows.sort();\n\t\t\tcols.sort();\n\t\t\t//console.log(\"result\",result)\n\t\t\treturn {data: result,columns: columns, rows: rows};\n\t\t}\n\t\n\t\n\t\t/*  function makeHeaders(data, fieldNames) {\n\t\t\t\tvar result = [];\n\t\t\t\tvar dataLength = data.length;\n\t\t\t\tvar namesLength = fieldNames.length;\n\t\t\t\tvar i, j;\n\t\t\t\tfor (i = 0; i < dataLength; i++) {\n\t\t\t\t\tvar datum = data[i];\n\t\t\t\t\tvar entry = [];\n\t\t\t\t\tfor (j = 0; j < namesLength; j++) {\n\t\t\t\t\t\tentry[j] = datum[fieldNames[j]];\n\t\t\t\t\t}\n\t\t\t\t\tresult[i] = entry;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}*/\n\t\tfunction pivotData(data, userOptions) {\n\t\t\t//console.log(\"pivotData\");\n\t\t\tif (userOptions === undefined) {userOptions = {};}\n\t\t\tvar options = {};\n\t\t\tUtils.copyProperties(defaultOptions, options);\n\t\t\tif (userOptions) {Utils.copyProperties(userOptions, options);}\n\t\t\t// var leftSet = new SortedSet(Utils.makeComparator(rowNames, data, options));\n\t\t\t//var topSet = new SortedSet(Utils.makeComparator(columnNames, data, options));\n\t\n\t\t\t//console.log(\"leftSet\",leftSet,\"topSet\",topSet)\n\t\t\t//ONLY if we want to use an derived attributs function or a filter attribute\n\t\t\t//options.extractor=function(e){return e}\n\t\t\tif (options.extractor) {data = extractData(data, options);}\n\t\n\t\t\t//return buildPivotResult(data, userOptions.ROWS, userOptions.COLS, myfunc.getGetValue(userOptions.GetValue), userOptions.cumulative);\n\t\treturn buildPivotResult(data, userOptions);\n\t\t\n\t\t}\n\t\n\t\t\n\t\tfunction toPivotData(FX,  userOptions){\n\t\t\t//console.log(\"toPivotData\",FX,userOptions)\n\t\t\tvar data = [];\n\t\t\t//console.log(\"userOptions toPivotDat\",userOptions, userOptions.derived)\n\t//\t\tvar derivedAttributes=userOptions.derivedAttributes\n\t\t\tfor (var i in FX.data) {\n\t\t\t\tvar tmp = {}\n\t\t\t\tfor (var j in FX.metadata.dsd.columns)\n\t\t\t\t{tmp[FX.metadata.dsd.columns[j].id] = FX.data[i][j];\n\t\t\t\n\t\t\t}\n\t\t\tfor(var d in userOptions.derived)\n\t\t\t{\n\t\t\t\t//console.log(userOptions.derived[d])\n\t\t\t\ttmp[d]=userOptions.derived[d](tmp);\n\t\t\t}\n\t\t\t//console.log(tmp)\n\t\t\t\tdata.push(tmp);\n\t\t\t}\n\t\t\t//console.log(\"pivotdata\",data)\n\t\n\t\t\treturn  pivotData(data,  userOptions);\n\t\t}\n\t\n\t\tfunction toFX(FX,  userOptions) {\n\t\t\tvar result = {data: [], metadata: {dsd: {columns: []}}}\n\t\t\tvar pivotdata = toPivotData(FX,  userOptions);\n\t\t\tfor (var ii in pivotdata.rows) {\n\t\t\t\tvar i=pivotdata.rows[ii];\n\t\t\t\tvar temp = i.split(\"|*\");\n\t\n\t\t\t\t//for internaldata\n\t\t\t\tfor (var jj in pivotdata.columns) {\n\t\t\t\t\tvar j=pivotdata.columns[jj];\n\t\t\t\t\t/*if (pivotdata.data[i][j]) {\n\t\t\t\t\t\ttemp.push(myfunc.getAgg(userOptions.Aggregator)(pivotdata.data[i][j],\n\t\t\t\t\t\t\tmyfunc.getFormater(userOptions.Formater),userOptions.nbDecimal) )\n\t\t\t\t\t\t//temp2.push(myfunc.getAgg(userOptions.aggregator)(pivotdata.data[i][j], myfunc.getFormater(userOptions.formater), userOptions.nbDecimal));\n\t\t\t\t\t\t//console.log(pivotdata.data[i][j])\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttemp.push(null);\n\t\t\t\t\t\t//temp2.push(null)\n\t\t\t\t\t}*/\n\t\n\t\n\t\t\t\t\tfor(var vtemp in userOptions.values)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar vindex= userOptions.values[vtemp]\n\t\t\t\t\t\tif (pivotdata.data[vindex][i][j]) {\n\t\t\t\t\t\t\tvar myAgg=null;\n\t\t\t\t\t\t\t//console.log(userOptions.formatter,vindex)\n\t\t\t\t\t\t\tif(userOptions.aggregationFn[vindex])\n\t\t\t\t\t\t\t{myAgg=userOptions.aggregationFn[vindex]}\n\t\t\t\t\t\t\telse{myAgg=\"default\"}\n\t\t\t\t\t\t\ttemp.push(myfunc.getAgg(vindex,myAgg)(pivotdata.data[vindex][i][j],\n\t\t\t\t\t\t\t\tmyfunc.getFormater(userOptions.formatter),\n\t\t\t\t\t\t\t\tuserOptions.decimals));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {temp.push(null)}\n\t\t\t\t\t}\n\t\n\t\n\t\n\t\t\t\t}\n\t\t\t\tresult.data.push(temp)\n\t\t\t\t//MYFINALRESULT.data.push(temp2)\n\t\t\t}\n\t\n\t\t\t/*var moyenne = jStat(MYFINALRESULT.data).mean();\n\t\n\t\t\t\tfor (var count = 0; count < MYFINALRESULT.data.length; count++) {\n\t\t\t\t\tvar corIndex = jStat.corrcoeff(moyenne, MYFINALRESULT.data[count]);\n\t\t\t\t\t//console.log(\"corIndex\",corIndex)\n\t\t\t\t\tif (corIndex < 0.8 || corIndex.toString() == \"NaN\") {\n\t\t\t\t\t\tMYFINALRESULT.nookline.push(\" problem ligne \" + MYFINALRESULT.rows[count] + \" : \" + corIndex);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tMYFINALRESULT.okline.push(\" ligne \" + MYFINALRESULT.rows[count] + \" : \" + corIndex);\n\t\t\t\t\t}\n\t\n\t\t\t\t}*/\n\t\n\t\t\tvar traduc = {}\n\t\t\tfor (var i in FX.metadata.dsd.columns) {traduc[FX.metadata.dsd.columns[i].id] = FX.metadata.dsd.columns[i].title[\"EN\"]}\n\t\t\t\n\t\t\tfor (var i in userOptions.ROWS) {\n\t\t\t\tresult.metadata.dsd.columns.push({id: userOptions.ROWS[i], title: {EN: traduc[userOptions.ROWS[i]]}})\n\t\t\t}\n\t\t\tfor (var i in userOptions.COLS) {\n\t\t\t\tresult.metadata.dsd.columns.push({id: userOptions.COLS[i], title: {EN: traduc[userOptions.COLS[i]]}})\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tfor (var i in pivotdata.columns) {\n\t\t\t\tresult.metadata.dsd.columns.push({id: i.replace(/\\|\\*/g, \"_\"),title: {EN: i.replace(/\\|\\*/g, \"\\n\")},subject: \"value\"})\n\t\t\t}\n\t\t\treturn result;\n\t\n\t\t}\n\t\t\n\t\t\n\t\tfunction toFXJson(FX,userOptions) {\n\t\t\t\t\t//console.log(\"toFXJson\",FX,userOptions);\n\t\t\tMYFINALRESULT = {data: [],unit:[],flag:[],attribute:[], rows: [], cols: [],cols2: [],cols2label: [], okline: [], nookline: [],rowname:[],colsname:[]};//to internal test and dataset function\n\t\t\t\n\t\t\n\t\t\t\n\t\t\tvar pivotdata = toPivotData(FX,  userOptions);\n\t\t\tfor (var ii in pivotdata.rows) {\n\t\t\t\tvar i=pivotdata.rows[ii];\n\t\t\t\t\n\t\t\t\tvar temp = i.split(\"|*\");\n\t\t\t\tMYFINALRESULT.rows.push(temp);\n\t\t\t\t\n\t\t\t\tvar temp2 = [];\n\t\t\t\tif(userOptions.hasOwnProperty(\"showRowHeaders\") && userOptions.showRowHeaders==true)\n\t\t\t\t{temp2=JSON.parse(JSON.stringify(temp))}\n\t\t\t\t//for internaldata\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfor (var jj in pivotdata.columns) {\n\t\t\t\t\tvar j=pivotdata.columns[jj];\n\t\t\t\t\t\n\t\t\t\t\tfor(var vtemp in userOptions.values)\n\t\t\t\t\t{\n\t\t\t\t\tvar vindex= userOptions.values[vtemp]\n\t\t\t\t\tif (pivotdata.data[vindex][i][j]) {\n\t\t\t\t\tvar myAgg=null;\n\t\t\t\t\t\n\t\t\t\t\tif(userOptions.aggregationFn[vindex])\n\t\t\t\t\t{myAgg=userOptions.aggregationFn[vindex]}\n\t\t\t\t\telse{myAgg=\"default\";}\n\t\t\t\t\t\n\t\n\t\t\t\t\ttemp2.push(myfunc.getAgg(vindex,myAgg)(pivotdata.data[vindex][i][j],\n\t\t\t\t\t\t\tmyfunc.getFormater(userOptions.formatter),\n\t\t\t\t\t\t\tuserOptions.decimals));\n\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse {temp2.push(null)}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tMYFINALRESULT.data.push(temp2)\n\t\t\t}\n\t\n\t\t\t/*var moyenne = jStat(MYFINALRESULT.data).mean();\n\t\n\t\t\t\tfor (var count = 0; count < MYFINALRESULT.data.length; count++) {\n\t\t\t\t\tvar corIndex = jStat.corrcoeff(moyenne, MYFINALRESULT.data[count]);\n\t\t\t\t\t//console.log(\"corIndex\",corIndex)\n\t\t\t\t\tif (corIndex < 0.8 || corIndex.toString() == \"NaN\") {\n\t\t\t\t\t\tMYFINALRESULT.nookline.push(\" problem ligne \" + MYFINALRESULT.rows[count] + \" : \" + corIndex);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tMYFINALRESULT.okline.push(\" ligne \" + MYFINALRESULT.rows[count] + \" : \" + corIndex);\n\t\t\t\t\t}\n\t\n\t\t\t\t}*/\n\t\n\t\t\tvar traduc = {}\n\t\t\tfor (var i in FX.metadata.dsd.columns) {traduc[FX.metadata.dsd.columns[i].id] =FX.metadata.dsd.columns[i].title[\"EN\"]}\n\t\t\t\n\t\t\tfor (var i in userOptions.rows) {\n\t\t\t\tMYFINALRESULT.rowname.push({id: userOptions.rows[i], title: {EN: traduc[userOptions.rows[i]]}})\n\t\t\t}\n\t\t\tif(userOptions.rows.length==0){MYFINALRESULT.rowname.push({id: \"row\", title:{EN: \"ROW\"}})\n\t}\n\t\t\tfor (var i in userOptions.columns) {\n\t\t\t\tMYFINALRESULT.colsname.push({id:  userOptions.columns[i], title: {EN: traduc[ userOptions.columns[i]]}})\n\t\t\t}\n\t\t\t\n\t\t\t//console.log(\"userOptions\",userOptions)\n\t\t\tvar hidden2={};\t\n\t\t\t\tfor(var i in userOptions.hidden){hidden2[userOptions.hidden[i]]=true}\n\t\n\t\t\t\n\t\t\tfor (var ii in pivotdata.columns) {\n\t\t\t\tvar i=pivotdata.columns[ii];\n\t\t\t\tMYFINALRESULT.cols.push({id: i.replace(/\\|\\*/g, \"_\"),title: {EN: i.replace(/\\|\\*/g, \"\\n\")}});\n\t\t\t\tMYFINALRESULT.cols2.push(i.split(\"|*\"))\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tMYFINALRESULT.cols2label.push(i.split(\"|*\"))\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn MYFINALRESULT;\n\t\n\t\t}\n\t\n\t\n\t\t\n\t\n\t\treturn function () {\n\t\t\treturn {\n\t\t\t\tpivot: toFXJson,\n\t\t\t\t\n\t\t\t\t\n\t\t\t\ttoFXJson:toFXJson,\n\t\t\t\ttoPivotData:toPivotData,\n\t\t\t\ttoFX:toFX,\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tidentity: identity,\n\t\t\t\ttoTree:toTree\n\t\t\t}\n\t\t};\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\n\t\tvar define = require('amdefine')(module);\n\t}\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\n\tvar Aggregator={\n\t\t\"VALUE0\":{\n\t\n\t\t\t\"default\":function(cell,format,nbDec){\n\t\t\t\t//\tconsole.log(\"AGG DEFAULT\",cell)\n\t\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\t\t\"sum\":function(cell,format,nbDec){\n\t\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\t\tavg:function(cell,format,nbDec){var a= jStat(cell);return format(a.mean(),nbDec)},\n\t\t\tmedian:function(cell,format,nbDec){var a= jStat(cell);return format(a.median(),nbDec)},\n\t\t\tstdev:function(cell,format,nbDec){var a= jStat(cell);return format(a.stdev(),nbDec)},\n\t\t\tcount:function(cell,format,nbDec){var a= cell;return format(a.length,nbDec)},\n\t\t\tconcat:function(cell,format,nbDec){var a= cell;return a.join(\" - \")}\n\t\t},\n\t\t\"Value\":{\n\t\n\t\t\t\"default\":function(cell,format,nbDec){\n\t\t\t\t//\tconsole.log(\"AGG DEFAULT\",cell)\n\t\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\t\t\"sum\":function(cell,format,nbDec){\n\t\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\t\tavg:function(cell,format,nbDec){var a= jStat(cell);return format(a.mean(),nbDec)},\n\t\t\tmedian:function(cell,format,nbDec){var a= jStat(cell);return format(a.median(),nbDec)},\n\t\t\tstdev:function(cell,format,nbDec){var a= jStat(cell);return format(a.stdev(),nbDec)},\n\t\t\tcount:function(cell,format,nbDec){var a= cell;return format(a.length,nbDec)},\n\t\t\tconcat:function(cell,format,nbDec){var a= cell;return a.join(\" - \")}\n\t\t},\"VALUE\":{\n\t\n\t\t\t\"default\":function(cell,format,nbDec){\n\t\t\t\t//\tconsole.log(\"AGG DEFAULT\",cell)\n\t\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\t\t\"sum\":function(cell,format,nbDec){\n\t\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\t\tavg:function(cell,format,nbDec){var a= jStat(cell);return format(a.mean(),nbDec)},\n\t\t\tmedian:function(cell,format,nbDec){var a= jStat(cell);return format(a.median(),nbDec)},\n\t\t\tstdev:function(cell,format,nbDec){var a= jStat(cell);return format(a.stdev(),nbDec)},\n\t\t\tcount:function(cell,format,nbDec){var a= cell;return format(a.length,nbDec)},\n\t\t\tconcat:function(cell,format,nbDec){var a= cell;return a.join(\" - \")}\n\t\t},\n\t\t\"value\":{\n\t\t\t\t\t\n\t\t\t\t\t\t\"default\":function(cell,format,nbDec){\n\t\t\t\t\t//\tconsole.log(\"AGG DEFAULT\",cell)\n\t\t\t\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\t\t\t\t\t\"sum\":function(cell,format,nbDec){\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\t\t\t\t\tavg:function(cell,format,nbDec){var a= jStat(cell);return format(a.mean(),nbDec)},\n\t\t\t\t\t\tmedian:function(cell,format,nbDec){var a= jStat(cell);return format(a.median(),nbDec)},\n\t\t\t\t\t\tstdev:function(cell,format,nbDec){var a= jStat(cell);return format(a.stdev(),nbDec)},\n\t\t\t\t\t\tcount:function(cell,format,nbDec){var a= cell;return format(a.length,nbDec)},\n\t\t\t\t\t\tconcat:function(cell,format,nbDec){var a= cell;return a.join(\" - \")}\n\t\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tum:{\tdefault:function(cell,format,nbDec){\n\t\t\t\t\t\t\tvar ret=cell[0];\n\t\t\t\t\t\t\tfor(var i in cell)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(cell[i]!=ret){ret=\"_\";}}\n\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdiff:function(cell,format,nbDec){\n\t\t\t\t\t\t\tvar ret=cell[0];\n\t\t\t\t\t\t\tfor(var i in cell)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(cell[i]!=ret){ret=\"_\";}}\n\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tflag:{\n\t\t\t\t\t\tconcat:function(cell,format,nbDec){var a= cell;return a.join(\" - \")},\n\t\t\t\t\t\tdefault:function(cell,format,nbDec){var a= cell;return a.join(\" - \")}\n\t\t\t\t\t\t},\n\t\t\t\t\tv1:{\t\t\t\t\t\n\t\t\t\t\t\tcount:function(cell,format,nbDec){var a= cell;return format(a.length,nbDec)},\n\t\t\t\t\t\tconcat:function(cell,format,nbDec){var a= cell;return a.join(\" - \")},\n\t\t\t\t\t\tdefault:function(cell,format,nbDec){var a= cell;return a.join(\" - \")}\n\t\t\t\t\t\t},\n\t\t\t\t\tdefault:function(cell,format,nbDec){var a=cell;return a.join(\" \")}\n\t\t\t\t};\n\t\t\t\t//\tconsole.log(\"Aggregator\",Aggregator.value)\n\t\t\t\t\n\t\t\t\t\n\tvar GetValue={\n\t\tdefault:function(rec,champ){return rec[champ];},\n\t\tvalue:{number:function(rec)\n\t\t{if(rec.value==null)\n\t\t{return null}\n\treturn parseFloat(rec.value)\n\t\t}\n\t\t,\n\t\tstring:function(rec){return rec.value}\n\t\t},\n\t\tValue:{number:function(rec){if(rec.Value==null){return null}return parseFloat(rec.Value)},string:function(rec){return rec.Value}}\n\t\t\t\n\t};\n\t/*Classic:function(rec){return rec.Value},\n\t\tclassic:function(rec){return rec.value},\n\t\tClassicToNumber:function(rec){if(rec.Value==null){return null}return parseFloat(rec.Value)},\n\t\tclassicToNumber:function(rec){if(rec.value==null){return null}return parseFloat(rec.value)},\n\t\tcustomToString:function(rec,args){ret=[];for(var i in args){ret.push(rec[args[i]])}},\n\t\tcustomToNumber:function(rec,args){ret=[];for(var i in args){ret.push( parseFloat(rec[args[i]]) )}}*/\n\t\n\t\n\t\n\t\n\tvar Formater={\n\t\tlocalstring:function(e,nbdecimal){return (Math.floor(e*Math.pow(10,nbdecimal))/Math.pow(10,nbdecimal)).toLocaleString()},\n\t\tvalue:function(e,nbdecimal){return Math.floor(e*Math.pow(10,nbdecimal))/Math.pow(10,nbdecimal)},\n\t\tstring:function(e,nbdecimal){return e}\n\t\n\t\t};\n\t\n\tvar getListAggregator=function(){//for toolbar\n\tret={};\n\tfor(var i in Aggregator)\n\t{\n\t\n\tret[i]={};\n\tfor(var j in Aggregator[i])\n\t\t{\n\t\tret[i][j]=Aggregator[i][j];\n\t\t}\n\t\n\t}\n\treturn ret;\n\t\t}\n\t\t\n\tvar getAgg=function(champ,choix){\n\t\n\tif(!Aggregator[champ]){return Aggregator.default}\n\tif(!choix){choix=\"default\";}\n\treturn Aggregator[champ][choix];\n\t}\n\t\n\tvar getGetValue=function(champ,choix){\n\tif(!GetValue[champ]){return GetValue[\"default\"]}\n\telse if(!GetValue[champ][choix]){return GetValue[\"default\"]}\n\telse{return GetValue[champ][choix]}\n\t}\n\t\n\tvar getFormater=function(choix){return Formater[choix]}\n\t\n\treturn function(){\n\t\treturn {\n\t\t\tgetListAggregator:getListAggregator,\n\t\t\tgetAgg:getAgg,\n\t\t\tgetGetValue:getGetValue,\n\t\t\tgetFormater:getFormater\n\t\t\t}\n\t\t}\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }\n/******/ ])});;\n\n\n/** WEBPACK FOOTER **\n ** fenix-ui-pivotator.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 763a630fa6a7dba9704f\n **/","if (typeof define !== 'function') {\n\tvar define = require('amdefine')(module);\n}\n\ndefine([\"./functions\"], function (myFunction) {\n\t'use strict';\n\t//FIG\n\tvar MYFINALRESULT;\n\tvar myfunc = new myFunction();\n\n\t\tvar Utils = {\ncopyProperties: function (source, dest) {\n\t\t\tfor (var k in source) {\n\t\t\t\tif (source.hasOwnProperty(k)) {dest[k] = source[k];}\n\t\t\t}\n\t\t},\nisArray: function (testObject) {return testObject && !(testObject.propertyIsEnumerable('length'))&& typeof testObject === 'object' && typeof testObject.length === 'number';},\nstringComparator: function (a, b) {\treturn a.localeCompare(b);\t},\nnumberComparator: function (a, b) {\t\tif (a > b) {return 1;} else if (b > a) {return -1;} else {\treturn 0;\t}\t},\ndefaultComparator: function () {\t\t\treturn 0;\t\t},\nmakeComparator: function (fields, data, comparators) {\n\t\t\tvar len = fields.length;\n\t\t\tvar i;\n\t\t\tvar c = [];\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tvar entry = data[0][fields[i]];\n\t\t\t\tvar entryType = typeof entry;\n\t\t\t\tif (typeof comparators[fields[i]] === 'function') {\n\t\t\t\t\tc[i] = comparators[fields[i]];\n\t\t\t\t} else if (entryType === 'number') {\n\t\t\t\t\tc[i] = this.numberComparator;\n\t\t\t\t} else if (entryType === 'string') {\n\t\t\t\t\tc[i] = this.stringComparator;\n\t\t\t\t} else if (Utils.isArray(entry)) {\n\t\t\t\t\tc[i] = this.defaultComparator;\n\t\t\t\t} else {\n\t\t\t\t\tc[i] = this.defaultComparator;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn function (a, b) {\n\t\t\t\tvar v = 0;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tvar field = fields[i];\n\t\t\t\t\tv = c[i](a[field], b[field]);\n\t\t\t\t\tif (v !== 0) {return v;}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar identity =function(){return x}\n\t\n\t\n\t\n\tvar toTree=function(arr,mySpan)\t{\n\t\tvar data=[{id:'root'}];\n\t\tvar indexMap={}\n\t\tfor(var i in arr){\n\t\t\tfor(var j=1;j<= arr[i].length;j++){\n\t\t\t\tvar index=arr[i].slice(0,j).join(\"_\");\n\t\t\t\tif(!indexMap[index]){indexMap[index]=false;}\n\t\t\t\tvar indexOld=\"\"\n\t\t\t\tif(j>1){indexOld=arr[i].slice(0,j-1).join(\"_\");}\n\t\t\t\tif(indexMap[index]==false){\n\t\t\t\t\tif(indexOld.length>0){data.push({\"id\":index,\"parentId\":indexOld})}\n\t\t\t\t\telse{data.push({\"id\":index,\"parentId\":'root'})}\n\t\t\t\t}\n\t\t\t\tindexMap[index]=true;\n\t\t\t}\t\t\t\n\t\t}\n\t\t//\t\tconsole.log(data);\n\n\t\tvar options = {  childKey  : 'id',  parentKey : 'parentId'};\n\n\n\t\t//document.body.innerHTML += '<pre>' + JSON.stringify(tree, null, 4) + '</pre>';\n\n\t\tfunction listToTree(list, options) {\n\t\t\toptions = options || {};\n\t\t\tvar childKey    = options.childKey    || 'child';\n\t\t\tvar parentKey   = options.parentKey   || 'parent';\n\t\t\tvar childrenKey = options.childrenKey || 'children';\n\t\t\tvar nodeFn      = options.nodeFn      || function(node, name, children) {   return { name : name, children : children };  };\n\t\t\tvar nodeCache = {};\n\t\t\treturn list.reduce(function(tree, node) {\n\t\t\t\tnode[childrenKey] = [];\n\t\t\t\tnodeCache[node[childKey]] = node;\n\t\t\t\tif (typeof node[parentKey] === 'undefined' || node[parentKey] === '') {\n\t\t\t\t\ttree = nodeFn(node, node[childKey], node[childrenKey]);\n\t\t\t\t} else {\n\t\t\t\t\tvar  parentNode = nodeCache[node[parentKey]];\n\t\t\t\t\tparentNode[childrenKey].push(nodeFn(node, node[childKey], node[childrenKey]));\n\t\t\t\t}\n\t\t\t\treturn tree;\n\t\t\t}, {});\n\t\t}\n\n\t\tfunction walkTree(tree, visitorFn, parent) {\n\t\t\tif (visitorFn == null || typeof visitorFn !== 'function') {return tree;\t}\n\t\t\tvisitorFn.call(tree, tree, parent);\n\t\t\tif (tree.children && tree.children.length > 0) {\n\t\t\t\ttree.children.forEach(function(child) {walkTree(child, visitorFn, tree);});\n\t\t\t}\n\t\t\treturn tree;\n\t\t}\n\n\t\tfunction pruneChildren(node, parent) {\tif (node.children.length < 1) {delete node.children;}}\n\t\t\n\t\t\n\t\tfunction setColRowSpan(tree){\n\t\t\tif(!tree.children || tree.children.length==0){\t\ttree[\"span\"]=1}\n\t\t\telse{tree[\"span\"]=0;}\n\t\t\tfor(var i in tree.children)\n\t\t\t{tree[\"span\"]+=setColRowSpan(tree.children[i])}\n\t\t\treturn tree[\"span\"];\n\t\t}\n\t\t\n\t\tvar tree = walkTree(listToTree(data, options), pruneChildren);\n\t\tsetColRowSpan(tree,mySpan)\n\n\t\tfunction treeToTab(tree,prof,profCurrent){\n\t\tvar\tret=[];\n\t\t\tif(prof==profCurrent){\n\t\t\t\tfor(var i in tree.children){\n\t\t\t\t\t//console.log(\"INSIDE\",tree.children[i])\t\n\t\t\t\t\tret.push({id:tree.children[i].name,span:tree.children[i].span})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{for(var i in tree.children){ret=ret.concat(treeToTab(tree.children[i],prof,profCurrent+1))}}\n\t\t\treturn ret;\n\t\t}\n\n\n\n\n\t\tvar ret2=[];\n\t\tfor(var i in arr[0]){//console.log(\"HIHI\",i);\n\t\t\tvar temp=[]\n\t\t\t//console.log(ret[i],treeToTab(tree,i,0))\n\t\t\ttemp=treeToTab(tree,i,0);\n\t\t\tret2.push(temp);\n\t\t}\n\t\t//console.log('final ret',ret2);\n\t\treturn ret2;//tree;\n\t}\n\tvar defaultOptions = {extractor: null,comparators: {}};\n\n\tfunction extractData(data, options) {\n\t\tvar extractor = options.extractor;\n\t\tif (typeof extractor === 'function') {\n\t\t\tvar extracted = [];\n\t\t\tvar length = data.length;\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t//console.log(\"verif\",data[i])\n\t\t\t\textracted = extracted.concat(extractor(data[i]));\n\t\t\t\t//extracted.push(extractor(data[i]));\n\t\t\t}\n\t\t\treturn extracted;\n\t\t} else {return data;}\n\t}\n\n\n\t//function buildPivotResult(data, row, cols, getValue, cumulative) {\nfunction buildPivotResult(data, opt) {\n\n\tvar row=opt.rows, cols=opt.columns, getValue= myfunc.getGetValue(opt.valueOutputType), cumulative=opt.cumulative\n\t\n\t\t//console.log(\"buildPivotResult\",\"data\",data, \"opt\",opt);\n\t\tif (!getValue) {getValue = function (a) {return a}}//mapping\n\n\t\tvar listTotalColumns = {};\n\t\tvar listTotalRows = {};\n\t\tvar columns=[];\n\t\tvar rows=[];\n\t\tvar len = data.length;\n\t\tvar dat;\n\t\t//var result = {};\n\t\tvar result = {};\n\t\t//console.log(\"opt\",opt)\n\t\tfor(var i=0;i<opt.values.length;i++){result[opt.values[i]]={};}\n\t\t\n\t\t\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\n\t\t\tvar indexR = [];\n\t\t\tvar indexC = [];\n\t\t\tdat = data[i];\n\t\t\tfor (var r in row) {indexR.push(data[i][row[r]]);}\n\t\t\tfor (var c in cols) {indexC.push(data[i][cols[c]]);}\n\t\t\tindexR = indexR.join(\"|*\");\n\t\t\tindexC = indexC.join(\"|*\");\n\t\t\t\n\t\t\tfor(var j=0;j<opt.values.length;j++){\n\t\t\t\tif (!result[opt.values[j]][indexR]) {result[opt.values[j]][indexR] = {};}\n\t\t\t\t\n\t\t\t\tif (!result[opt.values[j]][indexR][indexC])\n\t\t\t\t{result[opt.values[j]][indexR][indexC] =[myfunc.getGetValue(opt.values[j],\"number\")(dat,opt.values[j])];}\n\t\t\t\telse {result[opt.values[j]][indexR][indexC].push(myfunc.getGetValue(opt.values[j],\"number\")(dat,opt.values[j]));}\n\t\t\t}\n\t\t\t\n\t\t\t\n\n\t\t\tlistTotalColumns[indexC] = true;\n\t\t\tlistTotalRows[indexR] = true;\n\t\t}\n\n\t\tfor(var i in listTotalColumns){columns.push(i)}\n\t\tfor(var i in listTotalRows){rows.push(i)}\n\t\trows.sort();\n\t\tcols.sort();\n\t\t//console.log(\"result\",result)\n\t\treturn {data: result,columns: columns, rows: rows};\n\t}\n\n\n\t/*  function makeHeaders(data, fieldNames) {\n\t\t\tvar result = [];\n\t\t\tvar dataLength = data.length;\n\t\t\tvar namesLength = fieldNames.length;\n\t\t\tvar i, j;\n\t\t\tfor (i = 0; i < dataLength; i++) {\n\t\t\t\tvar datum = data[i];\n\t\t\t\tvar entry = [];\n\t\t\t\tfor (j = 0; j < namesLength; j++) {\n\t\t\t\t\tentry[j] = datum[fieldNames[j]];\n\t\t\t\t}\n\t\t\t\tresult[i] = entry;\n\t\t\t}\n\t\t\treturn result;\n\t\t}*/\n\tfunction pivotData(data, userOptions) {\n\t\t//console.log(\"pivotData\");\n\t\tif (userOptions === undefined) {userOptions = {};}\n\t\tvar options = {};\n\t\tUtils.copyProperties(defaultOptions, options);\n\t\tif (userOptions) {Utils.copyProperties(userOptions, options);}\n\t\t// var leftSet = new SortedSet(Utils.makeComparator(rowNames, data, options));\n\t\t//var topSet = new SortedSet(Utils.makeComparator(columnNames, data, options));\n\n\t\t//console.log(\"leftSet\",leftSet,\"topSet\",topSet)\n\t\t//ONLY if we want to use an derived attributs function or a filter attribute\n\t\t//options.extractor=function(e){return e}\n\t\tif (options.extractor) {data = extractData(data, options);}\n\n\t\t//return buildPivotResult(data, userOptions.ROWS, userOptions.COLS, myfunc.getGetValue(userOptions.GetValue), userOptions.cumulative);\n\treturn buildPivotResult(data, userOptions);\n\t\n\t}\n\n\t\n\tfunction toPivotData(FX,  userOptions){\n\t\t//console.log(\"toPivotData\",FX,userOptions)\n\t\tvar data = [];\n\t\t//console.log(\"userOptions toPivotDat\",userOptions, userOptions.derived)\n//\t\tvar derivedAttributes=userOptions.derivedAttributes\n\t\tfor (var i in FX.data) {\n\t\t\tvar tmp = {}\n\t\t\tfor (var j in FX.metadata.dsd.columns)\n\t\t\t{tmp[FX.metadata.dsd.columns[j].id] = FX.data[i][j];\n\t\t\n\t\t}\n\t\tfor(var d in userOptions.derived)\n\t\t{\n\t\t\t//console.log(userOptions.derived[d])\n\t\t\ttmp[d]=userOptions.derived[d](tmp);\n\t\t}\n\t\t//console.log(tmp)\n\t\t\tdata.push(tmp);\n\t\t}\n\t\t//console.log(\"pivotdata\",data)\n\n\t\treturn  pivotData(data,  userOptions);\n\t}\n\n\tfunction toFX(FX,  userOptions) {\n\t\tvar result = {data: [], metadata: {dsd: {columns: []}}}\n\t\tvar pivotdata = toPivotData(FX,  userOptions);\n\t\tfor (var ii in pivotdata.rows) {\n\t\t\tvar i=pivotdata.rows[ii];\n\t\t\tvar temp = i.split(\"|*\");\n\n\t\t\t//for internaldata\n\t\t\tfor (var jj in pivotdata.columns) {\n\t\t\t\tvar j=pivotdata.columns[jj];\n\t\t\t\t/*if (pivotdata.data[i][j]) {\n\t\t\t\t\ttemp.push(myfunc.getAgg(userOptions.Aggregator)(pivotdata.data[i][j],\n\t\t\t\t\t\tmyfunc.getFormater(userOptions.Formater),userOptions.nbDecimal) )\n\t\t\t\t\t//temp2.push(myfunc.getAgg(userOptions.aggregator)(pivotdata.data[i][j], myfunc.getFormater(userOptions.formater), userOptions.nbDecimal));\n\t\t\t\t\t//console.log(pivotdata.data[i][j])\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttemp.push(null);\n\t\t\t\t\t//temp2.push(null)\n\t\t\t\t}*/\n\n\n\t\t\t\tfor(var vtemp in userOptions.values)\n\t\t\t\t{\n\t\t\t\t\tvar vindex= userOptions.values[vtemp]\n\t\t\t\t\tif (pivotdata.data[vindex][i][j]) {\n\t\t\t\t\t\tvar myAgg=null;\n\t\t\t\t\t\t//console.log(userOptions.formatter,vindex)\n\t\t\t\t\t\tif(userOptions.aggregationFn[vindex])\n\t\t\t\t\t\t{myAgg=userOptions.aggregationFn[vindex]}\n\t\t\t\t\t\telse{myAgg=\"default\"}\n\t\t\t\t\t\ttemp.push(myfunc.getAgg(vindex,myAgg)(pivotdata.data[vindex][i][j],\n\t\t\t\t\t\t\tmyfunc.getFormater(userOptions.formatter),\n\t\t\t\t\t\t\tuserOptions.decimals));\n\t\t\t\t\t}\n\t\t\t\t\telse {temp.push(null)}\n\t\t\t\t}\n\n\n\n\t\t\t}\n\t\t\tresult.data.push(temp)\n\t\t\t//MYFINALRESULT.data.push(temp2)\n\t\t}\n\n\t\t/*var moyenne = jStat(MYFINALRESULT.data).mean();\n\n\t\t\tfor (var count = 0; count < MYFINALRESULT.data.length; count++) {\n\t\t\t\tvar corIndex = jStat.corrcoeff(moyenne, MYFINALRESULT.data[count]);\n\t\t\t\t//console.log(\"corIndex\",corIndex)\n\t\t\t\tif (corIndex < 0.8 || corIndex.toString() == \"NaN\") {\n\t\t\t\t\tMYFINALRESULT.nookline.push(\" problem ligne \" + MYFINALRESULT.rows[count] + \" : \" + corIndex);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tMYFINALRESULT.okline.push(\" ligne \" + MYFINALRESULT.rows[count] + \" : \" + corIndex);\n\t\t\t\t}\n\n\t\t\t}*/\n\n\t\tvar traduc = {}\n\t\tfor (var i in FX.metadata.dsd.columns) {traduc[FX.metadata.dsd.columns[i].id] = FX.metadata.dsd.columns[i].title[\"EN\"]}\n\t\t\n\t\tfor (var i in userOptions.ROWS) {\n\t\t\tresult.metadata.dsd.columns.push({id: userOptions.ROWS[i], title: {EN: traduc[userOptions.ROWS[i]]}})\n\t\t}\n\t\tfor (var i in userOptions.COLS) {\n\t\t\tresult.metadata.dsd.columns.push({id: userOptions.COLS[i], title: {EN: traduc[userOptions.COLS[i]]}})\n\t\t}\n\t\t\n\t\t\n\t\tfor (var i in pivotdata.columns) {\n\t\t\tresult.metadata.dsd.columns.push({id: i.replace(/\\|\\*/g, \"_\"),title: {EN: i.replace(/\\|\\*/g, \"\\n\")},subject: \"value\"})\n\t\t}\n\t\treturn result;\n\n\t}\n\t\n\t\n\tfunction toFXJson(FX,userOptions) {\n\t\t\t\t//console.log(\"toFXJson\",FX,userOptions);\n\t\tMYFINALRESULT = {data: [],unit:[],flag:[],attribute:[], rows: [], cols: [],cols2: [],cols2label: [], okline: [], nookline: [],rowname:[],colsname:[]};//to internal test and dataset function\n\t\t\n\t\n\t\t\n\t\tvar pivotdata = toPivotData(FX,  userOptions);\n\t\tfor (var ii in pivotdata.rows) {\n\t\t\tvar i=pivotdata.rows[ii];\n\t\t\t\n\t\t\tvar temp = i.split(\"|*\");\n\t\t\tMYFINALRESULT.rows.push(temp);\n\t\t\t\n\t\t\tvar temp2 = [];\n\t\t\tif(userOptions.hasOwnProperty(\"showRowHeaders\") && userOptions.showRowHeaders==true)\n\t\t\t{temp2=JSON.parse(JSON.stringify(temp))}\n\t\t\t//for internaldata\n\t\t\t\n\t\t\t\n\t\t\tfor (var jj in pivotdata.columns) {\n\t\t\t\tvar j=pivotdata.columns[jj];\n\t\t\t\t\n\t\t\t\tfor(var vtemp in userOptions.values)\n\t\t\t\t{\n\t\t\t\tvar vindex= userOptions.values[vtemp]\n\t\t\t\tif (pivotdata.data[vindex][i][j]) {\n\t\t\t\tvar myAgg=null;\n\t\t\t\t\n\t\t\t\tif(userOptions.aggregationFn[vindex])\n\t\t\t\t{myAgg=userOptions.aggregationFn[vindex]}\n\t\t\t\telse{myAgg=\"default\";}\n\t\t\t\t\n\n\t\t\t\ttemp2.push(myfunc.getAgg(vindex,myAgg)(pivotdata.data[vindex][i][j],\n\t\t\t\t\t\tmyfunc.getFormater(userOptions.formatter),\n\t\t\t\t\t\tuserOptions.decimals));\n\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse {temp2.push(null)}\n\t\t\t\t}\n\t\t\t}\n\t\t\tMYFINALRESULT.data.push(temp2)\n\t\t}\n\n\t\t/*var moyenne = jStat(MYFINALRESULT.data).mean();\n\n\t\t\tfor (var count = 0; count < MYFINALRESULT.data.length; count++) {\n\t\t\t\tvar corIndex = jStat.corrcoeff(moyenne, MYFINALRESULT.data[count]);\n\t\t\t\t//console.log(\"corIndex\",corIndex)\n\t\t\t\tif (corIndex < 0.8 || corIndex.toString() == \"NaN\") {\n\t\t\t\t\tMYFINALRESULT.nookline.push(\" problem ligne \" + MYFINALRESULT.rows[count] + \" : \" + corIndex);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tMYFINALRESULT.okline.push(\" ligne \" + MYFINALRESULT.rows[count] + \" : \" + corIndex);\n\t\t\t\t}\n\n\t\t\t}*/\n\n\t\tvar traduc = {}\n\t\tfor (var i in FX.metadata.dsd.columns) {traduc[FX.metadata.dsd.columns[i].id] =FX.metadata.dsd.columns[i].title[\"EN\"]}\n\t\t\n\t\tfor (var i in userOptions.rows) {\n\t\t\tMYFINALRESULT.rowname.push({id: userOptions.rows[i], title: {EN: traduc[userOptions.rows[i]]}})\n\t\t}\n\t\tif(userOptions.rows.length==0){MYFINALRESULT.rowname.push({id: \"row\", title:{EN: \"ROW\"}})\n}\n\t\tfor (var i in userOptions.columns) {\n\t\t\tMYFINALRESULT.colsname.push({id:  userOptions.columns[i], title: {EN: traduc[ userOptions.columns[i]]}})\n\t\t}\n\t\t\n\t\t//console.log(\"userOptions\",userOptions)\n\t\tvar hidden2={};\t\n\t\t\tfor(var i in userOptions.hidden){hidden2[userOptions.hidden[i]]=true}\n\n\t\t\n\t\tfor (var ii in pivotdata.columns) {\n\t\t\tvar i=pivotdata.columns[ii];\n\t\t\tMYFINALRESULT.cols.push({id: i.replace(/\\|\\*/g, \"_\"),title: {EN: i.replace(/\\|\\*/g, \"\\n\")}});\n\t\t\tMYFINALRESULT.cols2.push(i.split(\"|*\"))\n\t\t\t\n\t\t\t\n\t\t\tMYFINALRESULT.cols2label.push(i.split(\"|*\"))\n\t\t\t\n\t\t}\n\t\t\n\t\treturn MYFINALRESULT;\n\n\t}\n\n\n\t\n\n\treturn function () {\n\t\treturn {\n\t\t\tpivot: toFXJson,\n\t\t\t\n\t\t\t\n\t\t\ttoFXJson:toFXJson,\n\t\t\ttoPivotData:toPivotData,\n\t\t\ttoFX:toFX,\n\t\t\t\n\t\t\t\n\t\t\tidentity: identity,\n\t\t\ttoTree:toTree\n\t\t}\n\t};\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/index.js\n ** module id = 1\n ** module chunks = 0\n **/","if (typeof define !== 'function') {\n\tvar define = require('amdefine')(module);\n}\ndefine([\"jstat\"], function() {\n\nvar Aggregator={\n\t\"VALUE0\":{\n\n\t\t\"default\":function(cell,format,nbDec){\n\t\t\t//\tconsole.log(\"AGG DEFAULT\",cell)\n\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\t\"sum\":function(cell,format,nbDec){\n\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\tavg:function(cell,format,nbDec){var a= jStat(cell);return format(a.mean(),nbDec)},\n\t\tmedian:function(cell,format,nbDec){var a= jStat(cell);return format(a.median(),nbDec)},\n\t\tstdev:function(cell,format,nbDec){var a= jStat(cell);return format(a.stdev(),nbDec)},\n\t\tcount:function(cell,format,nbDec){var a= cell;return format(a.length,nbDec)},\n\t\tconcat:function(cell,format,nbDec){var a= cell;return a.join(\" - \")}\n\t},\n\t\"Value\":{\n\n\t\t\"default\":function(cell,format,nbDec){\n\t\t\t//\tconsole.log(\"AGG DEFAULT\",cell)\n\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\t\"sum\":function(cell,format,nbDec){\n\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\tavg:function(cell,format,nbDec){var a= jStat(cell);return format(a.mean(),nbDec)},\n\t\tmedian:function(cell,format,nbDec){var a= jStat(cell);return format(a.median(),nbDec)},\n\t\tstdev:function(cell,format,nbDec){var a= jStat(cell);return format(a.stdev(),nbDec)},\n\t\tcount:function(cell,format,nbDec){var a= cell;return format(a.length,nbDec)},\n\t\tconcat:function(cell,format,nbDec){var a= cell;return a.join(\" - \")}\n\t},\"VALUE\":{\n\n\t\t\"default\":function(cell,format,nbDec){\n\t\t\t//\tconsole.log(\"AGG DEFAULT\",cell)\n\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\t\"sum\":function(cell,format,nbDec){\n\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\tavg:function(cell,format,nbDec){var a= jStat(cell);return format(a.mean(),nbDec)},\n\t\tmedian:function(cell,format,nbDec){var a= jStat(cell);return format(a.median(),nbDec)},\n\t\tstdev:function(cell,format,nbDec){var a= jStat(cell);return format(a.stdev(),nbDec)},\n\t\tcount:function(cell,format,nbDec){var a= cell;return format(a.length,nbDec)},\n\t\tconcat:function(cell,format,nbDec){var a= cell;return a.join(\" - \")}\n\t},\n\t\"value\":{\n\t\t\t\t\n\t\t\t\t\t\"default\":function(cell,format,nbDec){\n\t\t\t\t//\tconsole.log(\"AGG DEFAULT\",cell)\n\t\t\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\t\t\t\t\"sum\":function(cell,format,nbDec){\n\t\t\t\t\t\n\t\t\t\t\tvar a= jStat(cell);return format(a.sum(),nbDec)},\n\t\t\t\t\tavg:function(cell,format,nbDec){var a= jStat(cell);return format(a.mean(),nbDec)},\n\t\t\t\t\tmedian:function(cell,format,nbDec){var a= jStat(cell);return format(a.median(),nbDec)},\n\t\t\t\t\tstdev:function(cell,format,nbDec){var a= jStat(cell);return format(a.stdev(),nbDec)},\n\t\t\t\t\tcount:function(cell,format,nbDec){var a= cell;return format(a.length,nbDec)},\n\t\t\t\t\tconcat:function(cell,format,nbDec){var a= cell;return a.join(\" - \")}\n\t\t\t\t\t},\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tum:{\tdefault:function(cell,format,nbDec){\n\t\t\t\t\t\tvar ret=cell[0];\n\t\t\t\t\t\tfor(var i in cell)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(cell[i]!=ret){ret=\"_\";}}\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdiff:function(cell,format,nbDec){\n\t\t\t\t\t\tvar ret=cell[0];\n\t\t\t\t\t\tfor(var i in cell)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(cell[i]!=ret){ret=\"_\";}}\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tflag:{\n\t\t\t\t\tconcat:function(cell,format,nbDec){var a= cell;return a.join(\" - \")},\n\t\t\t\t\tdefault:function(cell,format,nbDec){var a= cell;return a.join(\" - \")}\n\t\t\t\t\t},\n\t\t\t\tv1:{\t\t\t\t\t\n\t\t\t\t\tcount:function(cell,format,nbDec){var a= cell;return format(a.length,nbDec)},\n\t\t\t\t\tconcat:function(cell,format,nbDec){var a= cell;return a.join(\" - \")},\n\t\t\t\t\tdefault:function(cell,format,nbDec){var a= cell;return a.join(\" - \")}\n\t\t\t\t\t},\n\t\t\t\tdefault:function(cell,format,nbDec){var a=cell;return a.join(\" \")}\n\t\t\t};\n\t\t\t//\tconsole.log(\"Aggregator\",Aggregator.value)\n\t\t\t\n\t\t\t\nvar GetValue={\n\tdefault:function(rec,champ){return rec[champ];},\n\tvalue:{number:function(rec)\n\t{if(rec.value==null)\n\t{return null}\nreturn parseFloat(rec.value)\n\t}\n\t,\n\tstring:function(rec){return rec.value}\n\t},\n\tValue:{number:function(rec){if(rec.Value==null){return null}return parseFloat(rec.Value)},string:function(rec){return rec.Value}}\n\t\t\n};\n/*Classic:function(rec){return rec.Value},\n\tclassic:function(rec){return rec.value},\n\tClassicToNumber:function(rec){if(rec.Value==null){return null}return parseFloat(rec.Value)},\n\tclassicToNumber:function(rec){if(rec.value==null){return null}return parseFloat(rec.value)},\n\tcustomToString:function(rec,args){ret=[];for(var i in args){ret.push(rec[args[i]])}},\n\tcustomToNumber:function(rec,args){ret=[];for(var i in args){ret.push( parseFloat(rec[args[i]]) )}}*/\n\n\n\n\nvar Formater={\n\tlocalstring:function(e,nbdecimal){return (Math.floor(e*Math.pow(10,nbdecimal))/Math.pow(10,nbdecimal)).toLocaleString()},\n\tvalue:function(e,nbdecimal){return Math.floor(e*Math.pow(10,nbdecimal))/Math.pow(10,nbdecimal)},\n\tstring:function(e,nbdecimal){return e}\n\n\t};\n\nvar getListAggregator=function(){//for toolbar\nret={};\nfor(var i in Aggregator)\n{\n\nret[i]={};\nfor(var j in Aggregator[i])\n\t{\n\tret[i][j]=Aggregator[i][j];\n\t}\n\n}\nreturn ret;\n\t}\n\t\nvar getAgg=function(champ,choix){\n\nif(!Aggregator[champ]){return Aggregator.default}\nif(!choix){choix=\"default\";}\nreturn Aggregator[champ][choix];\n}\n\nvar getGetValue=function(champ,choix){\nif(!GetValue[champ]){return GetValue[\"default\"]}\nelse if(!GetValue[champ][choix]){return GetValue[\"default\"]}\nelse{return GetValue[champ][choix]}\n}\n\nvar getFormater=function(choix){return Formater[choix]}\n\nreturn function(){\n\treturn {\n\t\tgetListAggregator:getListAggregator,\n\t\tgetAgg:getAgg,\n\t\tgetGetValue:getGetValue,\n\t\tgetFormater:getFormater\n\t\t}\n\t}\n\n}\n);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/functions.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jstat\"\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}